{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\awesome_app\\\\src\\\\Submission.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport './styles.css';\nimport { useState, useEffect } from 'react';\nimport PieChartComponent from './Piechart.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Submission(props) {\n  _s();\n  const handle = props.data;\n  const programming = [];\n  if (handle !== \"\") {\n    const [accepted, setaccepted] = useState(null);\n    const [tle, settle] = useState(null);\n    const [wrong, setwrong] = useState(null);\n    const [run, setrun] = useState(null);\n    useEffect(() => {\n      const api = `https://codeforces.com/api/user.status?handle=${handle}`;\n      async function fetchdata() {\n        try {\n          const ele = await fetch(api);\n          if (ele.ok) {\n            const ele_data = await ele.json();\n            if (ele_data) {\n              ele_data.result.forEach(data => {\n                let programming_language = data.programmingLanguage;\n                let verdict = data.verdict;\n                programming.push(programming_language);\n                if (verdict === \"OK\") {\n                  setaccepted(accepted + 1);\n                } else if (verdict === \"TIME_LIMIT_EXCEEDED\") {\n                  settle(tle + 1);\n                } else if (verdict === \"RUNTIME_ERROR\") {\n                  setrun(run + 1);\n                } else if (verdict === \"WRONG_ANSWER\") {\n                  setwrong(wrong + 1);\n                }\n              });\n            }\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n      fetchdata();\n    }, [handle]);\n    return /*#__PURE__*/_jsxDEV(PieChartComponent, {\n      data: \"[tle,accepted,wrong,run]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(Submission, \"LjxXlzrDG7vT+UyvJo8o1BJdSXk=\");\n_c = Submission;\nvar _c;\n$RefreshReg$(_c, \"Submission\");","map":{"version":3,"names":["React","ReactDom","useState","useEffect","PieChartComponent","jsxDEV","_jsxDEV","Submission","props","_s","handle","data","programming","accepted","setaccepted","tle","settle","wrong","setwrong","run","setrun","api","fetchdata","ele","fetch","ok","ele_data","json","result","forEach","programming_language","programmingLanguage","verdict","push","err","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/awesome_app/src/Submission.jsx"],"sourcesContent":["import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './styles.css';\r\nimport {useState,useEffect} from 'react';\r\nimport PieChartComponent from './Piechart.jsx';\r\n\r\nexport default function Submission(props){\r\n    const handle=props.data;\r\n    const programming=[];\r\n    if(handle!==\"\"){\r\n        const [accepted,setaccepted]=useState(null);\r\n        const [tle,settle]=useState(null);\r\n        const [wrong,setwrong]=useState(null);\r\n        const [run,setrun]=useState(null);\r\n        useEffect(()=>{\r\n            const api=`https://codeforces.com/api/user.status?handle=${handle}`;\r\n            async function fetchdata(){\r\n                try{\r\n               const ele=await fetch(api);\r\n               if(ele.ok){\r\n                  const ele_data=await ele.json();\r\n                  if(ele_data){\r\n                    ele_data.result.forEach((data)=>{\r\n                        let programming_language=data.programmingLanguage;\r\n                        let verdict=data.verdict;\r\n                        programming.push(programming_language);\r\n                        if(verdict===\"OK\"){\r\n                            setaccepted(accepted+1);\r\n                        }\r\n                        else if(verdict===\"TIME_LIMIT_EXCEEDED\"){\r\n                            settle(tle+1);\r\n                        }\r\n                        else if(verdict===\"RUNTIME_ERROR\"){\r\n                            setrun(run+1);\r\n                        }\r\n                        else if(verdict===\"WRONG_ANSWER\"){\r\n                            setwrong(wrong+1);\r\n                        }\r\n\r\n                    });\r\n                  }\r\n               }\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n            }\r\n            fetchdata();\r\n        },[handle]);\r\n        return(\r\n           <PieChartComponent data=\"[tle,accepted,wrong,run]\"></PieChartComponent>\r\n        )\r\n\r\n    }\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,cAAc;AACrB,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AACxC,OAAOC,iBAAiB,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAC;EAAAC,EAAA;EACrC,MAAMC,MAAM,GAACF,KAAK,CAACG,IAAI;EACvB,MAAMC,WAAW,GAAC,EAAE;EACpB,IAAGF,MAAM,KAAG,EAAE,EAAC;IACX,MAAM,CAACG,QAAQ,EAACC,WAAW,CAAC,GAACZ,QAAQ,CAAC,IAAI,CAAC;IAC3C,MAAM,CAACa,GAAG,EAACC,MAAM,CAAC,GAACd,QAAQ,CAAC,IAAI,CAAC;IACjC,MAAM,CAACe,KAAK,EAACC,QAAQ,CAAC,GAAChB,QAAQ,CAAC,IAAI,CAAC;IACrC,MAAM,CAACiB,GAAG,EAACC,MAAM,CAAC,GAAClB,QAAQ,CAAC,IAAI,CAAC;IACjCC,SAAS,CAAC,MAAI;MACV,MAAMkB,GAAG,GAAE,iDAAgDX,MAAO,EAAC;MACnE,eAAeY,SAASA,CAAA,EAAE;QACtB,IAAG;UACJ,MAAMC,GAAG,GAAC,MAAMC,KAAK,CAACH,GAAG,CAAC;UAC1B,IAAGE,GAAG,CAACE,EAAE,EAAC;YACP,MAAMC,QAAQ,GAAC,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;YAC/B,IAAGD,QAAQ,EAAC;cACVA,QAAQ,CAACE,MAAM,CAACC,OAAO,CAAElB,IAAI,IAAG;gBAC5B,IAAImB,oBAAoB,GAACnB,IAAI,CAACoB,mBAAmB;gBACjD,IAAIC,OAAO,GAACrB,IAAI,CAACqB,OAAO;gBACxBpB,WAAW,CAACqB,IAAI,CAACH,oBAAoB,CAAC;gBACtC,IAAGE,OAAO,KAAG,IAAI,EAAC;kBACdlB,WAAW,CAACD,QAAQ,GAAC,CAAC,CAAC;gBAC3B,CAAC,MACI,IAAGmB,OAAO,KAAG,qBAAqB,EAAC;kBACpChB,MAAM,CAACD,GAAG,GAAC,CAAC,CAAC;gBACjB,CAAC,MACI,IAAGiB,OAAO,KAAG,eAAe,EAAC;kBAC9BZ,MAAM,CAACD,GAAG,GAAC,CAAC,CAAC;gBACjB,CAAC,MACI,IAAGa,OAAO,KAAG,cAAc,EAAC;kBAC7Bd,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;gBACrB;cAEJ,CAAC,CAAC;YACJ;UACH;QACH,CAAC,QAAMiB,GAAG,EAAC;UACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QACpB;MACA;MACAZ,SAAS,CAAC,CAAC;IACf,CAAC,EAAC,CAACZ,MAAM,CAAC,CAAC;IACX,oBACGJ,OAAA,CAACF,iBAAiB;MAACO,IAAI,EAAC;IAA0B;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC;EAG9E;AACJ;AAAC/B,EAAA,CA/CuBF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\awesome_app\\\\src\\\\index.js\";\n/*old way to write\nreact and react-dom are modules\nvar React=require('react');\nvar ReactDOM=require('react-dom');*/\n//new way to write   and babel convert this advance javascript code  into browser specific javascript\n//babel basically like a trans-compiler\n/*\n//react module helps in to write jsx\nimport React from 'react';\n//react-dom module helps in dom manipulation\nimport ReactDOM from 'react-dom';\n//<h1>HELLO WOELD</h1> is not html,is basically jsx(javascript extension) which is also converted to html by babel\nReactDOM.render(<h1>HELLO WORLD!</h1>,document.querySelector('#root'));*/\n\n// let React=require('react');\n// let ReactDom=require('react-dom');\n// ReactDom.render(React.createElement(\"h1\",null,\"this is ritik\"),document.querySelector('#root'));\n//so we can say react module is used for javascript extension (jsx)\n\n//render function takes only one element so if we have to use more than one element we use div\n// ReactDom.render(\n//     <div>\n//         <h1>this is nikhil</h1>\n//         <p>this is my mom</p>\n//         <h2>this is my father</h2>\n//     </div>,document.querySelector('#root')\n\n// )\n\n//we can also do same thing without help of div by using array\n// import React from 'react';\n// import ReactDom from 'react-dom';\n// ReactDom.render(\n//     [\n//         <h1>this is baadshah</h1>,\n//         <h2>you are my hero</h2>,\n//         <h3>you are great</h3>\n//     ],\n//     document.querySelector('#root')\n\n// )\n\n// let h1=document.createElement(\"h1\");\n// h1.innerText=\"hello brother\";\n// let parent=document.querySelector('#root');\n// parent.appendChild(h1);\n\n//React fragment\n//basically when we use like this\n/*ReactDom.render(\n    //     <div>\n    //         <h1>this is nikhil</h1>\n    //         <p>this is my mom</p>\n    //         <h2>this is my father</h2>\n    //     </div>,document.querySelector('#root')\n    \n    // )*/\n// and check in console that code \n/* basically create another div inside the <div class=\"root\"> which is not preferrable when we use css but it doesn't occur while using as array\nwe can also remove this problem by using React.fragment*/\n//    import React from 'react';\n// import ReactDom from 'react-dom';\n// ReactDom.render(\n//     <React.Fragment>\n//         <h1>this is baadshah</h1>\n//         <h2>you are my hero</h2>\n//         <h3>you are great</h3>\n//         </React.Fragment> ,\n//     document.querySelector('#root')\n\n// )\n\n//we can also use short syntax of React.Fragment i.e <>,</>\n\n// import React from 'react';\n// import ReactDom from 'react-dom';\n// ReactDom.render(\n//     <>\n//         <h1>this is baadshah</h1>\n//         <h2>you are my hero</h2>\n//         <h3>you are great</h3>\n//         </> ,\n//     document.querySelector('#root')\n\n// )\n\n//practice \nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nReactDom.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"This are my best movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"SALAAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"KGF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 10\n  }, this)]\n}, void 0, true));","map":{"version":3,"names":["React","ReactDom","jsxDEV","_jsxDEV","Fragment","_Fragment","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/React/awesome_app/src/index.js"],"sourcesContent":["/*old way to write\nreact and react-dom are modules\nvar React=require('react');\nvar ReactDOM=require('react-dom');*/\n//new way to write   and babel convert this advance javascript code  into browser specific javascript\n//babel basically like a trans-compiler\n/*\n//react module helps in to write jsx\nimport React from 'react';\n//react-dom module helps in dom manipulation\nimport ReactDOM from 'react-dom';\n//<h1>HELLO WOELD</h1> is not html,is basically jsx(javascript extension) which is also converted to html by babel\nReactDOM.render(<h1>HELLO WORLD!</h1>,document.querySelector('#root'));*/\n\n// let React=require('react');\n// let ReactDom=require('react-dom');\n// ReactDom.render(React.createElement(\"h1\",null,\"this is ritik\"),document.querySelector('#root'));\n//so we can say react module is used for javascript extension (jsx)\n\n\n//render function takes only one element so if we have to use more than one element we use div\n// ReactDom.render(\n//     <div>\n//         <h1>this is nikhil</h1>\n//         <p>this is my mom</p>\n//         <h2>this is my father</h2>\n//     </div>,document.querySelector('#root')\n\n// )\n\n//we can also do same thing without help of div by using array\n// import React from 'react';\n// import ReactDom from 'react-dom';\n// ReactDom.render(\n//     [\n//         <h1>this is baadshah</h1>,\n//         <h2>you are my hero</h2>,\n//         <h3>you are great</h3>\n//     ],\n//     document.querySelector('#root')\n    \n// )\n\n// let h1=document.createElement(\"h1\");\n// h1.innerText=\"hello brother\";\n// let parent=document.querySelector('#root');\n// parent.appendChild(h1);\n\n\n//React fragment\n//basically when we use like this\n/*ReactDom.render(\n    //     <div>\n    //         <h1>this is nikhil</h1>\n    //         <p>this is my mom</p>\n    //         <h2>this is my father</h2>\n    //     </div>,document.querySelector('#root')\n    \n    // )*/\n   // and check in console that code \n   /* basically create another div inside the <div class=\"root\"> which is not preferrable when we use css but it doesn't occur while using as array\n   we can also remove this problem by using React.fragment*/\n//    import React from 'react';\n// import ReactDom from 'react-dom';\n// ReactDom.render(\n//     <React.Fragment>\n//         <h1>this is baadshah</h1>\n//         <h2>you are my hero</h2>\n//         <h3>you are great</h3>\n//         </React.Fragment> ,\n//     document.querySelector('#root')\n    \n// )\n\n//we can also use short syntax of React.Fragment i.e <>,</>\n\n// import React from 'react';\n// import ReactDom from 'react-dom';\n// ReactDom.render(\n//     <>\n//         <h1>this is baadshah</h1>\n//         <h2>you are my hero</h2>\n//         <h3>you are great</h3>\n//         </> ,\n//     document.querySelector('#root')\n    \n// )\n\n\n//practice \nimport React from 'react';\nimport ReactDom from 'react-dom';\nReactDom.render(\n    <>\n        <h1>This are my best movies</h1>\n         <ol>\n            <li>SALAAR</li>\n            <li>KGF</li>\n         </ol>\n    </>\n)\n\n\n\n\n\n\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjCJ,QAAQ,CAACK,MAAM,eACXH,OAAA,CAAAE,SAAA;EAAAE,QAAA,gBACIJ,OAAA;IAAAI,QAAA,EAAI;EAAuB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eAC/BR,OAAA;IAAAI,QAAA,gBACGJ,OAAA;MAAAI,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfR,OAAA;MAAAI,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAAA,eACR,CACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
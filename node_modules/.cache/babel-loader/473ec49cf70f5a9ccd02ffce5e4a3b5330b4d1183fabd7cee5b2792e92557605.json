{"ast":null,"code":"// import React from 'react';\n// import ReactDom from 'react-dom';\n// import './styles.css';\n// import {useState,useEffect} from 'react';\n// import PieChartComponent from './Piechart.jsx';\n// import LineChart from './Linechart.jsx';\n// import BarGraph from './Bargraph.jsx';\n\n// export default function Submission(props){\n//     const handle=props.data;\n\n//         const [accepted,setaccepted]=useState(0);\n//         const [tle,settle]=useState(0);\n//         const [wrong,setwrong]=useState(0);\n//         const [run,setrun]=useState(0);\n//         const [mpp, setMpp] = useState(new Map())\n//         const[mp,setmp]=useState(new Map());\n//         const[mrating,setmrating]=useState(new Set());\n//         const [contest, setContest] = useState([]);\n//         const [contestRating, setContestRating] = useState([]);\n//         console.log(mpp);\n//         console.log(\"first\");\n//         useEffect(()=>{\n\n//             console.log(\"second\");\n\n//             setaccepted(0);\n//             settle(0);\n//             setwrong(0);\n//             setrun(0);\n//             setmp(new Map());\n//             setMpp(new Map());\n\n//             setContest([]);\n//             setContestRating([]);\n\n//             if(handle!==\"\"){\n//             const api1=`https://codeforces.com/api/user.status?handle=${handle}`;\n//             async function fetchdata1(){\n//                 try{\n//                const ele=await fetch(api1);\n//                if(ele.ok){\n//                   const ele_data=await ele.json();\n//                   if(ele_data){\n//                     ele_data.result.forEach((data)=>{\n//                         let programming_language=data.programmingLanguage;\n//                         let verdict=data.verdict;\n//                         setmp((prevmp)=>{\n//                             const updatedmp=new Map(prevmp);\n//                            const current_count=updatedmp.get(programming_language)||0;\n//                            updatedmp.set(programming_language,current_count+1);\n//                             return updatedmp;\n//                         })\n\n//                         if(verdict===\"OK\"){\n//                             setaccepted((prev)=>prev+1);\n//                         }\n//                         else if(verdict===\"TIME_LIMIT_EXCEEDED\"){\n//                             settle((prev)=>prev+1);\n//                         }\n//                         else if(verdict===\"RUNTIME_ERROR\"){\n//                             setrun((prev)=>prev+1);\n//                         }\n//                         else if(verdict===\"WRONG_ANSWER\"){\n//                             setwrong((prev)=>prev+1);\n//                         }\n//                         data.problem.tags.forEach((value)=>{\n//                             setMpp((prevMap) => {\n//                                 const updatedMap = new Map(prevMap);\n//                                 const currentCount = updatedMap.get(value) || 0;\n//                                 updatedMap.set(value, currentCount + 1);\n//                                 return updatedMap;\n//                             });\n//                         })\n\n//                     });\n//                   }\n//                }\n//             }catch(err){\n//                 console.log(err);\n//             }\n//             }\n//             fetchdata1();\n//             const api2=`https://codeforces.com/api/user.rating?handle=${handle}`;\n//             async function fetchdata2(){\n//                 try{\n//                     let ele=await fetch(api2);\n//                     if(ele.ok){\n//                         let data=await ele.json();\n//                         if(data){\n//                             let tempContest = [];\n//                             let tempContestRating = [];\n//                             data.result.forEach((value, index) => {\n//                                 tempContest.push(index + 1);\n//                                 tempContestRating.push(value.newRating);\n//                             });\n//                             setContest(tempContest);\n//                             setContestRating(tempContestRating);\n//                         }\n//                     }\n//                 }catch(err){\n//                     console.log(err);\n//                 }\n\n//             }\n//             fetchdata2();\n\n//         }\n//         },[handle]);\n\n//          const programming=[];\n//          const programming_values=[];\n\n//         mp.forEach((value,index)=>{\n//            programming.push(index);\n//            programming_values.push(value);\n//         });\n//         console.log(\"third\");\n//        console.log(mpp);\n//         const problem=[];\n//         const problem_count=[];\n//         mpp.forEach((value,index)=>{\n//              problem.push(index);\n//              problem_count.push(value);\n//         }\n\n//             );\n\n//             console.log(problem);\n//             console.log(problem_count);\n\n//         return(\n//             <>\n//             <div className=\"outer-pi\">\n//            <PieChartComponent label={[\"TLE\",\"AC\",\"WA\",\"RE\"]}data={[tle,accepted,wrong,run]} text='Submissions:'></PieChartComponent>\n//            <PieChartComponent label={programming}data={programming_values} text='Languages used:'></PieChartComponent>\n//            </div>\n//            <div className=\"problem\">\n//             <BarGraph labels={problem} data={problem_count}></BarGraph>\n//            </div>\n//            <div className=\"rating\">\n//             <LineChart labels={contest} data={contestRating} handle={handle}></LineChart>\n//            </div>\n//            </>\n//         )\n\n//     }","map":{"version":3,"names":[],"sources":["D:/React/awesome_app/src/Submission.jsx"],"sourcesContent":["// import React from 'react';\r\n// import ReactDom from 'react-dom';\r\n// import './styles.css';\r\n// import {useState,useEffect} from 'react';\r\n// import PieChartComponent from './Piechart.jsx';\r\n// import LineChart from './Linechart.jsx';\r\n// import BarGraph from './Bargraph.jsx';\r\n\r\n// export default function Submission(props){\r\n//     const handle=props.data;\r\n\r\n \r\n  \r\n//         const [accepted,setaccepted]=useState(0);\r\n//         const [tle,settle]=useState(0);\r\n//         const [wrong,setwrong]=useState(0);\r\n//         const [run,setrun]=useState(0);\r\n//         const [mpp, setMpp] = useState(new Map())\r\n//         const[mp,setmp]=useState(new Map());\r\n//         const[mrating,setmrating]=useState(new Set());\r\n//         const [contest, setContest] = useState([]);\r\n//         const [contestRating, setContestRating] = useState([]);\r\n//         console.log(mpp);\r\n//         console.log(\"first\");\r\n//         useEffect(()=>{\r\n\r\n//             console.log(\"second\");\r\n\r\n//             setaccepted(0);\r\n//             settle(0);\r\n//             setwrong(0);\r\n//             setrun(0);\r\n//             setmp(new Map());\r\n//             setMpp(new Map());\r\n           \r\n//             setContest([]);\r\n//             setContestRating([]);\r\n           \r\n//             if(handle!==\"\"){\r\n//             const api1=`https://codeforces.com/api/user.status?handle=${handle}`;\r\n//             async function fetchdata1(){\r\n//                 try{\r\n//                const ele=await fetch(api1);\r\n//                if(ele.ok){\r\n//                   const ele_data=await ele.json();\r\n//                   if(ele_data){\r\n//                     ele_data.result.forEach((data)=>{\r\n//                         let programming_language=data.programmingLanguage;\r\n//                         let verdict=data.verdict;\r\n//                         setmp((prevmp)=>{\r\n//                             const updatedmp=new Map(prevmp);\r\n//                            const current_count=updatedmp.get(programming_language)||0;\r\n//                            updatedmp.set(programming_language,current_count+1);\r\n//                             return updatedmp;\r\n//                         })\r\n                       \r\n//                         if(verdict===\"OK\"){\r\n//                             setaccepted((prev)=>prev+1);\r\n//                         }\r\n//                         else if(verdict===\"TIME_LIMIT_EXCEEDED\"){\r\n//                             settle((prev)=>prev+1);\r\n//                         }\r\n//                         else if(verdict===\"RUNTIME_ERROR\"){\r\n//                             setrun((prev)=>prev+1);\r\n//                         }\r\n//                         else if(verdict===\"WRONG_ANSWER\"){\r\n//                             setwrong((prev)=>prev+1);\r\n//                         }\r\n//                         data.problem.tags.forEach((value)=>{\r\n//                             setMpp((prevMap) => {\r\n//                                 const updatedMap = new Map(prevMap);\r\n//                                 const currentCount = updatedMap.get(value) || 0;\r\n//                                 updatedMap.set(value, currentCount + 1);\r\n//                                 return updatedMap;\r\n//                             });\r\n//                         })\r\n\r\n//                     });\r\n//                   }\r\n//                }\r\n//             }catch(err){\r\n//                 console.log(err);\r\n//             }\r\n//             }\r\n//             fetchdata1();\r\n//             const api2=`https://codeforces.com/api/user.rating?handle=${handle}`;\r\n//             async function fetchdata2(){\r\n//                 try{\r\n//                     let ele=await fetch(api2);\r\n//                     if(ele.ok){\r\n//                         let data=await ele.json();\r\n//                         if(data){\r\n//                             let tempContest = [];\r\n//                             let tempContestRating = [];\r\n//                             data.result.forEach((value, index) => {\r\n//                                 tempContest.push(index + 1);\r\n//                                 tempContestRating.push(value.newRating);\r\n//                             });\r\n//                             setContest(tempContest);\r\n//                             setContestRating(tempContestRating);\r\n//                         }\r\n//                     }\r\n//                 }catch(err){\r\n//                     console.log(err);\r\n//                 }\r\n                \r\n//             }\r\n//             fetchdata2();\r\n           \r\n//         }\r\n//         },[handle]);\r\n\r\n//          const programming=[];\r\n//          const programming_values=[];\r\n\r\n        \r\n        \r\n//         mp.forEach((value,index)=>{\r\n//            programming.push(index);\r\n//            programming_values.push(value);\r\n//         });\r\n//         console.log(\"third\");\r\n//        console.log(mpp);\r\n//         const problem=[];\r\n//         const problem_count=[];\r\n//         mpp.forEach((value,index)=>{\r\n//              problem.push(index);\r\n//              problem_count.push(value);\r\n//         }\r\n\r\n//             );\r\n\r\n\r\n//             console.log(problem);\r\n//             console.log(problem_count);\r\n           \r\n      \r\n          \r\n    \r\n        \r\n       \r\n//         return(\r\n//             <>\r\n//             <div className=\"outer-pi\">\r\n//            <PieChartComponent label={[\"TLE\",\"AC\",\"WA\",\"RE\"]}data={[tle,accepted,wrong,run]} text='Submissions:'></PieChartComponent>\r\n//            <PieChartComponent label={programming}data={programming_values} text='Languages used:'></PieChartComponent>\r\n//            </div>\r\n//            <div className=\"problem\">\r\n//             <BarGraph labels={problem} data={problem_count}></BarGraph>\r\n//            </div>\r\n//            <div className=\"rating\">\r\n//             <LineChart labels={contest} data={contestRating} handle={handle}></LineChart>\r\n//            </div>\r\n//            </>\r\n//         )\r\n\r\n//     }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
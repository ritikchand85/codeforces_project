{"ast":null,"code":"import React from'react';import ReactDom from'react-dom';import'./styles.css';import{useState,useEffect}from'react';import PieChartComponent from'./Piechart.jsx';import LineChart from'./Linechart.jsx';import BarGraph from'./Bargraph.jsx';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Submission(props){const handle=props.data;const[accepted,setaccepted]=useState(0);const[tle,settle]=useState(0);const[wrong,setwrong]=useState(0);const[run,setrun]=useState(0);const[mpp,setMpp]=useState(new Map());const[mp,setmp]=useState(new Map());const[mrating,setmrating]=useState(new Set());const[contest,setContest]=useState([]);const[contestRating,setContestRating]=useState([]);console.log(mpp);console.log(\"first\");useEffect(()=>{console.log(\"second\");setaccepted(0);settle(0);setwrong(0);setrun(0);setmp(new Map());setMpp(new Map());setContest([]);setContestRating([]);if(handle!==\"\"){const api1=\"https://codeforces.com/api/user.status?handle=\".concat(handle);async function fetchdata1(){try{const ele=await fetch(api1);if(ele.ok){const ele_data=await ele.json();if(ele_data&&ele_data.result){let x=new Map();let y=new Map();let accepted=0;let tle=0;let run=0;let wrong=0;let z=new Set();ele_data.result.forEach(data=>{let programming_language=data.programmingLanguage;let verdict=data.verdict;let problem_name;if(data.problem&&data.problem.name){problem_name=data.problem.name;}if(programming_language){y.set(programming_language,(y.get(programming_language)||0)+1);}if(verdict===\"OK\"){accepted=accepted+1;}else if(verdict===\"TIME_LIMIT_EXCEEDED\"){tle=tle+1;}else if(verdict===\"RUNTIME_ERROR\"){run=run+1;}else if(verdict===\"WRONG_ANSWER\"){wrong=wrong+1;}if(z.has(problem_name)){return;}if(data.problem&&data.problem.tags){data.problem.tags.forEach(value=>{x.set(value,(x.get(value)||0)+1);});z.add(problem_name);}});setMpp(x);setmp(y);setaccepted(accepted);settle(tle);setwrong(wrong);setrun(run);}}}catch(err){console.log(err);}}fetchdata1();const api2=\"https://codeforces.com/api/user.rating?handle=\".concat(handle);async function fetchdata2(){try{let ele=await fetch(api2);if(ele.ok){let data=await ele.json();if(data){let tempContest=[];let tempContestRating=[];data.result.forEach((value,index)=>{tempContest.push(index+1);tempContestRating.push(value.newRating);});setContest(tempContest);setContestRating(tempContestRating);}}}catch(err){console.log(err);}}fetchdata2();}},[handle]);const programming=Array.from(mp.keys());const programming_values=Array.from(mp.values());const problem=Array.from(mpp.keys());const problem_count=Array.from(mpp.values());console.log(problem);console.log(problem_count);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"outer-pi\",children:[/*#__PURE__*/_jsx(PieChartComponent,{label:[\"TLE\",\"AC\",\"WA\",\"RE\"],data:[tle,accepted,wrong,run],anchor:\"end\",position:\"top\",size:\"11\",text:\"Submissions:\"}),/*#__PURE__*/_jsx(PieChartComponent,{label:programming,data:programming_values,anchor:\"end\",position:\"top\",size:\"7\",text:\"Languages used:\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"problem\",children:/*#__PURE__*/_jsx(BarGraph,{labels:problem,data:problem_count})}),/*#__PURE__*/_jsx(\"div\",{className:\"rating\",children:/*#__PURE__*/_jsx(LineChart,{labels:contest,data:contestRating,handle:handle})})]});}","map":{"version":3,"names":["React","ReactDom","useState","useEffect","PieChartComponent","LineChart","BarGraph","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Submission","props","handle","data","accepted","setaccepted","tle","settle","wrong","setwrong","run","setrun","mpp","setMpp","Map","mp","setmp","mrating","setmrating","Set","contest","setContest","contestRating","setContestRating","console","log","api1","concat","fetchdata1","ele","fetch","ok","ele_data","json","result","x","y","z","forEach","programming_language","programmingLanguage","verdict","problem_name","problem","name","set","get","has","tags","value","add","err","api2","fetchdata2","tempContest","tempContestRating","index","push","newRating","programming","Array","from","keys","programming_values","values","problem_count","children","className","label","anchor","position","size","text","labels"],"sources":["D:/React/awesome_app/src/Submission.jsx"],"sourcesContent":["import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './styles.css';\r\nimport {useState,useEffect} from 'react';\r\nimport PieChartComponent from './Piechart.jsx';\r\nimport LineChart from './Linechart.jsx';\r\nimport BarGraph from './Bargraph.jsx';\r\n\r\nexport default function Submission(props){\r\n    const handle=props.data;\r\n\r\n \r\n  \r\n        const [accepted,setaccepted]=useState(0);\r\n        const [tle,settle]=useState(0);\r\n        const [wrong,setwrong]=useState(0);\r\n        const [run,setrun]=useState(0);\r\n        const [mpp, setMpp] = useState(new Map())\r\n        const[mp,setmp]=useState(new Map());\r\n        const[mrating,setmrating]=useState(new Set());\r\n        const [contest, setContest] = useState([]);\r\n        const [contestRating, setContestRating] = useState([]);\r\n        console.log(mpp);\r\n        console.log(\"first\");\r\n        useEffect(()=>{\r\n\r\n            console.log(\"second\");\r\n\r\n            setaccepted(0);\r\n            settle(0);\r\n            setwrong(0);\r\n            setrun(0);\r\n            setmp(new Map());\r\n            setMpp(new Map());\r\n           \r\n            setContest([]);\r\n            setContestRating([]);\r\n           \r\n            if(handle!==\"\"){\r\n            const api1=`https://codeforces.com/api/user.status?handle=${handle}`;\r\n            async function fetchdata1(){\r\n                try{\r\n               const ele=await fetch(api1);\r\n               if(ele.ok){\r\n                  const ele_data=await ele.json();\r\n                  if(ele_data&&ele_data.result){\r\n                    let x=new Map();\r\n                    let y=new Map();\r\n                    let accepted=0;\r\n                    let tle=0;\r\n                    let run=0;\r\n                    let wrong=0;\r\n                    let z=new Set();\r\n                    ele_data.result.forEach((data)=>{\r\n                        let programming_language=data.programmingLanguage;\r\n                        let verdict=data.verdict;\r\n                        let problem_name;\r\n                        if(data.problem&&data.problem.name){\r\n\r\n                        problem_name=data.problem.name;\r\n                        }\r\n                       if(programming_language){\r\n                        y.set(programming_language,(y.get(programming_language)||0)+1);\r\n                       }\r\n                       \r\n                       \r\n                        if(verdict===\"OK\"){\r\n                            accepted=accepted+1;\r\n                        }\r\n                        else if(verdict===\"TIME_LIMIT_EXCEEDED\"){\r\n                          tle=tle+1;\r\n                        }\r\n                        else if(verdict===\"RUNTIME_ERROR\"){\r\n                            run=run+1;\r\n                        }\r\n                        else if(verdict===\"WRONG_ANSWER\"){\r\n                            wrong=wrong+1;\r\n                        }\r\n                        if(z.has(problem_name)){\r\n                            return;\r\n                           }\r\n                        if(data.problem&&data.problem.tags){\r\n                        data.problem.tags.forEach((value)=>{\r\n                           x.set(value,(x.get(value)||0)+1);\r\n                        });\r\n                        z.add(problem_name);\r\n                    }\r\n\r\n                    });\r\n\r\n                    setMpp(x);\r\n                    setmp(y);\r\n                    setaccepted(accepted);\r\n                    settle(tle);\r\n                    setwrong(wrong);\r\n                    setrun(run);\r\n                \r\n                  }\r\n               }\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n            }\r\n            fetchdata1();\r\n            const api2=`https://codeforces.com/api/user.rating?handle=${handle}`;\r\n            async function fetchdata2(){\r\n                try{\r\n                    let ele=await fetch(api2);\r\n                    if(ele.ok){\r\n                        let data=await ele.json();\r\n                        if(data){\r\n                            let tempContest = [];\r\n                            let tempContestRating = [];\r\n                            \r\n                            data.result.forEach((value, index) => {\r\n                                tempContest.push(index + 1);\r\n                                tempContestRating.push(value.newRating);\r\n                            });\r\n                            setContest(tempContest);\r\n                            setContestRating(tempContestRating);\r\n                        }\r\n                    }\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n                \r\n            }\r\n            fetchdata2();\r\n           \r\n        }\r\n        },[handle]);\r\n\r\n        \r\n\r\n        \r\n        \r\n         const programming = Array.from(mp.keys());\r\n    const programming_values = Array.from(mp.values());\r\n\r\n    const problem = Array.from(mpp.keys());\r\n    const problem_count = Array.from(mpp.values());\r\n\r\n\r\n            console.log(problem);\r\n            console.log(problem_count);\r\n           \r\n      \r\n          \r\n    \r\n        \r\n       \r\n        return(\r\n            <>\r\n            <div className=\"outer-pi\">\r\n           <PieChartComponent label={[\"TLE\",\"AC\",\"WA\",\"RE\"]}data={[tle,accepted,wrong,run]}anchor=\"end\"position=\"top\" size=\"11\"text='Submissions:'></PieChartComponent>\r\n           <PieChartComponent label={programming}data={programming_values} anchor=\"end\"position=\"top\" size=\"7\" text='Languages used:'></PieChartComponent>\r\n           </div>\r\n           <div className=\"problem\">\r\n            <BarGraph labels={problem} data={problem_count}></BarGraph>\r\n           </div>\r\n           <div className=\"rating\">\r\n            <LineChart labels={contest} data={contestRating} handle={handle}></LineChart>\r\n           </div>\r\n           </>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
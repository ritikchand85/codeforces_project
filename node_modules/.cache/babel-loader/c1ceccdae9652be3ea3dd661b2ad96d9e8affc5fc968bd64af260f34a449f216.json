{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\awesome_app\\\\src\\\\Submission.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport './styles.css';\nimport { useState, useEffect } from 'react';\nimport PieChartComponent from './Piechart.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Submission(props) {\n  _s();\n  const handle = props.data;\n  const [accepted, setaccepted] = useState(0);\n  const [tle, settle] = useState(0);\n  const [wrong, setwrong] = useState(0);\n  const [run, setrun] = useState(0);\n  const [mpp, setMpp] = useState(new Map());\n  const [st, setst] = useState(new Set());\n  useEffect(() => {\n    if (handle !== \"\") {\n      const api = `https://codeforces.com/api/user.status?handle=${handle}`;\n      async function fetchdata() {\n        try {\n          const ele = await fetch(api);\n          if (ele.ok) {\n            const ele_data = await ele.json();\n            if (ele_data) {\n              ele_data.result.forEach(data => {\n                let programming_language = data.programmingLanguage;\n                let verdict = data.verdict;\n                setst(prevst);\n                programming.push(programming_language);\n                if (verdict === \"OK\") {\n                  setaccepted(prev => prev + 1);\n                } else if (verdict === \"TIME_LIMIT_EXCEEDED\") {\n                  settle(prev => prev + 1);\n                } else if (verdict === \"RUNTIME_ERROR\") {\n                  setrun(prev => prev + 1);\n                } else if (verdict === \"WRONG_ANSWER\") {\n                  setwrong(prev => prev + 1);\n                }\n                data.problem.tags.forEach(value => {\n                  setMpp(prevMap => {\n                    const updatedMap = new Map(prevMap);\n                    const currentCount = updatedMap.get(value) || 0;\n                    updatedMap.set(value, currentCount + 1);\n                    return updatedMap;\n                  });\n                });\n              });\n            }\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n      fetchdata();\n    }\n  }, [handle]);\n  console.log(programming);\n  console.log(mpp);\n  return /*#__PURE__*/_jsxDEV(PieChartComponent, {\n    data: [tle, accepted, wrong, run]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n}\n_s(Submission, \"XFYCzAS5FBm3ZY4WF5TwrTc5t7I=\");\n_c = Submission;\nvar _c;\n$RefreshReg$(_c, \"Submission\");","map":{"version":3,"names":["React","ReactDom","useState","useEffect","PieChartComponent","jsxDEV","_jsxDEV","Submission","props","_s","handle","data","accepted","setaccepted","tle","settle","wrong","setwrong","run","setrun","mpp","setMpp","Map","st","setst","Set","api","fetchdata","ele","fetch","ok","ele_data","json","result","forEach","programming_language","programmingLanguage","verdict","prevst","programming","push","prev","problem","tags","value","prevMap","updatedMap","currentCount","get","set","err","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/awesome_app/src/Submission.jsx"],"sourcesContent":["import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './styles.css';\r\nimport {useState,useEffect} from 'react';\r\nimport PieChartComponent from './Piechart.jsx';\r\n\r\nexport default function Submission(props){\r\n    const handle=props.data;\r\n\r\n \r\n  \r\n        const [accepted,setaccepted]=useState(0);\r\n        const [tle,settle]=useState(0);\r\n        const [wrong,setwrong]=useState(0);\r\n        const [run,setrun]=useState(0);\r\n        const [mpp, setMpp] = useState(new Map())\r\n        const[st,setst]=useState(new Set());\r\n        useEffect(()=>{\r\n            if(handle!==\"\"){\r\n            const api=`https://codeforces.com/api/user.status?handle=${handle}`;\r\n            async function fetchdata(){\r\n                try{\r\n               const ele=await fetch(api);\r\n               if(ele.ok){\r\n                  const ele_data=await ele.json();\r\n                  if(ele_data){\r\n                    ele_data.result.forEach((data)=>{\r\n                        let programming_language=data.programmingLanguage;\r\n                        let verdict=data.verdict;\r\n                        setst((prevst))\r\n                        programming.push(programming_language);\r\n                        if(verdict===\"OK\"){\r\n                            setaccepted((prev)=>prev+1);\r\n                        }\r\n                        else if(verdict===\"TIME_LIMIT_EXCEEDED\"){\r\n                            settle((prev)=>prev+1);\r\n                        }\r\n                        else if(verdict===\"RUNTIME_ERROR\"){\r\n                            setrun((prev)=>prev+1);\r\n                        }\r\n                        else if(verdict===\"WRONG_ANSWER\"){\r\n                            setwrong((prev)=>prev+1);\r\n                        }\r\n                        data.problem.tags.forEach((value)=>{\r\n                            setMpp((prevMap) => {\r\n                                const updatedMap = new Map(prevMap);\r\n                                const currentCount = updatedMap.get(value) || 0;\r\n                                updatedMap.set(value, currentCount + 1);\r\n                                return updatedMap;\r\n                            });\r\n                        })\r\n\r\n                    });\r\n                  }\r\n               }\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n            }\r\n            fetchdata();\r\n        }\r\n        },[handle]);\r\n        console.log(programming);\r\n        console.log(mpp);\r\n        return(\r\n            \r\n           <PieChartComponent data={[tle,accepted,wrong,run]}></PieChartComponent>\r\n        )\r\n\r\n    }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}